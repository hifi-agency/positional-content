<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Package" ToolsVersion="4.0">

	<!-- IMPORTS -->
	<PropertyGroup>
		<MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\Tools\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
		<MSBuildUmbracoTasksPath>$(MSBuildProjectDirectory)\Tools\MSBuildUmbracoTasks</MSBuildUmbracoTasksPath>
    <MSBuildNugetTasksPath>$(MSBuildProjectDirectory)\Tools\MSBuildNugetTasks</MSBuildNugetTasksPath>
    <AppVeyorUmbracoPath>$(MSBuildProjectDirectory)\Tools\AppVeyorUmbraco</AppVeyorUmbracoPath>
	</PropertyGroup>

	<Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets" />
	<Import Project="$(MSBuildUmbracoTasksPath)\MSBuild.Umbraco.Tasks.Targets" />
  <Import Project="$(MSBuildNugetTasksPath)\MSBuild.NuGet.Tasks.Targets" />
  <Import Project="$(AppVeyorUmbracoPath)\AppVeyorUmbraco.Targets" />

  <!-- SHARED PROPERTIES -->
  <PropertyGroup>
    <PackageName>HiFi.PositionalContent</PackageName>
    <MinUmbracoVersion>8.1.0</MinUmbracoVersion>
    <Readme>An umbraco property editor that stores and manages the positional relationship between image and content</Readme>
    <AuthorName>Phil Whittaker</AuthorName>
    <AuthorUrl>http://www.hifi.agency</AuthorUrl>
    <PackageLicenseName>MIT</PackageLicenseName>
    <PackageLicenseUrl>http://www.opensource.org/licenses/MIT</PackageLicenseUrl>
    <ProjectUrl>http://www.positionalcontent.com</ProjectUrl>
  </PropertyGroup>

  <!-- NUGET ONLY PROPERTIES -->
  <PropertyGroup>
    <PackageId>HiFi.PositionalContent</PackageId>
    <Copyright>Hi-Fi Ltd</Copyright>
    <Owners>Phil Whittaker</Owners>
    <IconUrl>http://media.positionalcontent.com/assets/logo/large.jpg</IconUrl>
    <Tags>umbraco</Tags>
    <Language>en-GB</Language>
    <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
  </PropertyGroup>

  <!-- APPVEYOR PROPERTIES -->
  <PropertyGroup>
    <FileVersion>$(APPVEYOR_BUILD_VERSION)</FileVersion>
  </PropertyGroup>
  <Choose>
    <When Condition="$(APPVEYOR_BUILD_NUMBER) != '' And $(APPVEYOR_REPO_TAG) != 'true' ">
      <PropertyGroup>
        <Release>false</Release>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <Release>true</Release>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Choose>
    <When Condition="$(Release) == 'false' And $(UMBRACO_PACKAGE_PRERELEASE_SUFFIX) == 'rtm'">
      <PropertyGroup>
        <AbortBuild>true</AbortBuild>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <AbortBuild>false</AbortBuild>
      </PropertyGroup>
    </Otherwise>
  </Choose>

 

  <!-- PATHS -->
  <PropertyGroup>
    <BuildConfig>Release</BuildConfig>
    <RootDir>$(MSBuildProjectDirectory)\..</RootDir>
    <CoreProjectDir>$(RootDir)\PositionalContent.Code</CoreProjectDir>
    <BuildUmbDir>$(MSBuildProjectDirectory)\_umbraco</BuildUmbDir>
    <BuildNuGetDir>$(MSBuildProjectDirectory)\_nuget</BuildNuGetDir>
    <BuildNuGetCoreDir>$(MSBuildProjectDirectory)\_nugetCore</BuildNuGetCoreDir>
    <ArtifactsDir>$(MSBuildProjectDirectory)\artifacts</ArtifactsDir>
    <PropertyEditorProjectDir>$(RootDir)\PositionalContent.Code\Web\UI</PropertyEditorProjectDir>   
  </PropertyGroup>

  <!-- TARGETS -->
  <Target Name="GetProductVersion">
    <Error Condition="$(AbortBuild) == 'true'" Text="Aborting the build as the UMBRACO_PACKAGE_PRERELEASE_SUFFIX suffix is set 'rtm' but APPVEYOR_REPO_TAG is not 'true'" />
    <GetProductVersion BuildVersion="$(APPVEYOR_BUILD_VERSION)" BuildSuffix="$(UMBRACO_PACKAGE_PRERELEASE_SUFFIX)" Release="$(Release)">
      <Output TaskParameter="ProductVersion" PropertyName="ProductVersion"/>
    </GetProductVersion>
  </Target>

  <!-- CLEAN -->
  <Target Name="Clean" DependsOnTargets="GetProductVersion">
    <RemoveDir Directories="$(BuildUmbDir)" Condition="Exists('$(BuildUmbDir)')" />
    <RemoveDir Directories="$(BuildNuGetDir)" Condition="Exists('$(BuildNuGetDir)')" />
    <RemoveDir Directories="$(BuildNuGetCoreDir)" Condition="Exists('$(BuildNuGetCoreDir)')" />
    <RemoveDir Directories="$(ArtifactsDir)" Condition="Exists('$(ArtifactsDir)')" />
    <MakeDir Directories="$(BuildUmbDir)" />
    <MakeDir Directories="$(BuildNuGetDir)" />
    <MakeDir Directories="$(BuildNuGetCoreDir)" />
    <MakeDir Directories="$(ArtifactsDir)" />
  </Target>

    <!-- UPDATE PROJECT ASSEMBLEY VERSION -->
  <Target Name="UpdateAssemblyInfo" DependsOnTargets="Clean">
    <FileUpdate Encoding="ASCII" Files="$(CoreProjectDir)\Properties\AssemblyInfo.cs" Regex="AssemblyVersion\(&quot;.*&quot;\)\]" ReplacementText="AssemblyVersion(&quot;$(FileVersion)&quot;)]" />
    <FileUpdate Encoding="ASCII" Files="$(CoreProjectDir)\Properties\AssemblyInfo.cs" Regex="AssemblyFileVersion\(&quot;.*&quot;\)\]" ReplacementText="AssemblyFileVersion(&quot;$(FileVersion)&quot;)]" />
    <FileUpdate Encoding="ASCII" Files="$(CoreProjectDir)\Properties\AssemblyInfo.cs" Regex="AssemblyInformationalVersion\(&quot;.*&quot;\)\]" ReplacementText="AssemblyInformationalVersion(&quot;$(ProductVersion)&quot;)]" />
  </Target>

	<!-- COMPILE -->
	<Target Name="Compile" DependsOnTargets="UpdateAssemblyInfo">
		<MSBuild Projects="$(CoreProjectDir)\PositionalContent.Code.csproj" Properties="Configuration=$(BuildConfig)"/>
	</Target>

	<!-- PREPARE FILES -->
	<Target Name="PrepareFiles" DependsOnTargets="Compile">
		<ItemGroup>
      <!-- STANDARD -->
			<BinFiles Include="$(CoreProjectDir)\Bin\$(BuildConfig)\HiFi.PositionalContent.dll" />
      <PdbFiles Include="$(CoreProjectDir)\Bin\$(BuildConfig)\HiFi.PositionalContent.pdb" />
      <SrcFiles Include="$(CoreProjectDir)\**\*.cs" Exclude="$(CoreProjectDir)\obj\**"/>
			<PackageFile Include="$(MSBuildProjectDirectory)\package.xml" />
      <NuSpecFile Include="$(MSBuildProjectDirectory)\package.nuspec" />
      <AppPluginFiles Include="$(CoreProjectDir)\Web\UI\App_Plugins\PositionalContent\**\*" />
      <PositionalContentPartial Include="$(CoreProjectDir)\Web\UI\Views\Partials\PositionalContent.cshtml" />
      <PositionalContentCssPartial Include="$(CoreProjectDir)\Web\UI\Views\Partials\PositionalContentCss.cshtml" />
      <EditorBasePartial Include="$(CoreProjectDir)\Web\UI\Views\Partials\PositionalContent\Base.cshtml" />
    </ItemGroup>
    <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(BuildUmbDir)\bin" />
    <Copy SourceFiles="@(PackageFile)" DestinationFolder="$(BuildUmbDir)" />

    <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(BuildNuGetDir)\lib\net45" />
    <Copy SourceFiles="@(PdbFiles)" DestinationFolder="$(BuildNuGetDir)\lib\net45" />
    <Copy SourceFiles="@(SrcFiles)" DestinationFiles="@(SrcFiles->'$(BuildNuGetDir)\src\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(NuSpecFile)" DestinationFolder="$(BuildNuGetDir)" />
    <Copy SourceFiles="@(NuSpecFile)" DestinationFolder="$(BuildNuGetCoreDir)" />    

    <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(BuildNuGetCoreDir)\lib\net45" />
    <Copy SourceFiles="@(PdbFiles)" DestinationFolder="$(BuildNuGetCoreDir)\lib\net45" />
    <Copy SourceFiles="@(SrcFiles)" DestinationFiles="@(SrcFiles->'$(BuildNuGetCoreDir)\src\%(RecursiveDir)%(Filename)%(Extension)')" />

    <Copy SourceFiles="@(AppPluginFiles)" DestinationFiles="@(AppPluginFiles->'$(BuildUmbDir)\App_Plugins\PositionalContent\%(RecursiveDir)%(Filename)%(Extension)')" />
	  <Copy SourceFiles="@(AppPluginFiles)" DestinationFiles="@(AppPluginFiles->'$(BuildNuGetDir)\Content\App_Plugins\PositionalContent\%(RecursiveDir)%(Filename)%(Extension)')" /> 
    <Copy SourceFiles="@(PositionalContentPartial)" DestinationFiles="@(PositionalContentPartial->'$(BuildUmbDir)\Views\Partials\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(PositionalContentPartial)" DestinationFiles="@(PositionalContentPartial->'$(BuildNuGetDir)\Content\Views\Partials\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(PositionalContentCssPartial)" DestinationFiles="@(PositionalContentCssPartial->'$(BuildUmbDir)\Views\Partials\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(PositionalContentCssPartial)" DestinationFiles="@(PositionalContentCssPartial->'$(BuildNuGetDir)\Content\Views\Partials\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(EditorBasePartial)" DestinationFiles="@(EditorBasePartial->'$(BuildUmbDir)\Views\Partials\PositionalContent\%(RecursiveDir)%(Filename)%(Extension)')" />
	  <Copy SourceFiles="@(EditorBasePartial)" DestinationFiles="@(EditorBasePartial->'$(BuildNuGetDir)\Content\Views\Partials\PositionalContent\%(RecursiveDir)%(Filename)%(Extension)')" />   
  
  </Target>

  <!-- MANIFEST UMBRACO -->
  <Target Name="ManifestUmbraco" DependsOnTargets="PrepareFiles">
    <ItemGroup>
      <ManifestFiles Include="$(BuildUmbDir)\**\*" Exclude="$(BuildUmbDir)\package.xml" />
    </ItemGroup>
    <ManifestUpdate
			ManifestFile="$(BuildUmbDir)\package.xml"
			WorkingDirectory="$(BuildUmbDir)"
			MinimumRequiredUmbracoVersion="$(MinUmbracoVersion)"
			PackageName="$(PackageName)"
			PackageVersion="$(ProductVersion)"
			AuthorName="$(AuthorName)"
			AuthorUrl="$(AuthorUrl)"
			Readme="$(Readme)"
			PackageLicenseName="$(PackageLicenseName)"
			PackageLicenseUrl="$(PackageLicenseUrl)"
			PackageUrl="$(ProjectUrl)"
			Files="@(ManifestFiles)" />
  </Target>

  <!-- MANIFEST FOR NUGET PACKAGE -->
  <Target Name="ManifestNuGet" DependsOnTargets="PrepareFiles">
    <ItemGroup>
      <ManifestFiles Include="$(BuildNuGetDir)\**\*" Exclude="$(BuildNuGetDir)\package.nuspec" />
    </ItemGroup>
    <MSBuild.NuGet.Tasks.ManifestUpdate
			ManifestFile="$(BuildNuGetDir)\package.nuspec"
			WorkingDirectory="$(BuildNuGetDir)"
			Title="$(PackageName)"
			Description="$(Readme)"
			Summary="$(Readme)"
			Version="$(ProductVersion)"
			MinimumRequiredUmbracoVersion ="$(MinUmbracoVersion)"
			Authors="$(AuthorName)"
			Owners="$(Owners)"
			Copyright="$(Copyright)"
			LicenseUrl="$(PackageLicenseUrl)"
			ProjectUrl="$(ProjectUrl)"
			Id="$(PackageId)"
			IconUrl="$(IconUrl)"
			Language="$(Language)"
			RequireLicenseAcceptance="$(RequireLicenseAcceptance)"
			Tags="$(Tags)"
			Files="@(ManifestFiles)" />
  </Target>

  <!-- MANIFEST FOR NUGET CORE PACKAGE -->
  <Target Name="ManifestNuGetCore" DependsOnTargets="PrepareFiles">
    <ItemGroup>
      <ManifestFiles Include="$(BuildNuGetCoreDir)\**\*" Exclude="$(BuildNuGetCoreDir)\package.nuspec" />
    </ItemGroup>
    <MSBuild.NuGet.Tasks.ManifestUpdate
			ManifestFile="$(BuildNuGetCoreDir)\package.nuspec"
			WorkingDirectory="$(BuildNuGetCoreDir)"
			Title="$(PackageName).Core"
			Description="$(Readme)"
			Summary="$(Readme)"
			Version="$(ProductVersion)"
			MinimumRequiredUmbracoVersion ="$(MinUmbracoVersion)"
			Authors="$(AuthorName)"
			Owners="$(Owners)"
			Copyright="$(Copyright)"
			LicenseUrl="$(PackageLicenseUrl)"
			ProjectUrl="$(ProjectUrl)"
			Id="$(PackageId).Core"
			IconUrl="$(IconUrl)"
			Language="$(Language)"
			RequireLicenseAcceptance="$(RequireLicenseAcceptance)"
			Tags="$(Tags)"
			Files="@(ManifestFiles)" />
  </Target>

  <!-- PACKAGE -->
  <Target Name="Package" DependsOnTargets="ManifestUmbraco; ManifestNuGet; ManifestNuGetCore">
    <ItemGroup>
      <PackageFiles Include="$(BuildUmbDir)\**\*.*" />
    </ItemGroup>

    <Package ManifestFile="$(BuildUmbDir)\package.xml"
			WorkingDirectory="$(BuildUmbDir)"
			OutputDirectory="$(ArtifactsDir)"
			Files="@(PackageFiles)" />     

    <MSBuild.NuGet.Tasks.Pack NuGetExePath="$(RootDir)\BuildPackage\Tools\NuGet.exe"
          ManifestFile="$(BuildNuGetDir)\package.nuspec"
          BasePath="$(BuildNuGetDir)"
          Version="$(ProductVersion)"
          OutputDirectory="$(ArtifactsDir)"
          Symbols="true" />

    <MSBuild.NuGet.Tasks.Pack NuGetExePath="$(RootDir)\BuildPackage\Tools\NuGet.exe"
          ManifestFile="$(BuildNuGetCoreDir)\package.nuspec"
          BasePath="$(BuildNuGetCoreDir)"
          Version="$(ProductVersion)"
          OutputDirectory="$(ArtifactsDir)"
          Symbols="true" />                 

    <RemoveDir Directories="$(BuildUmbDir)" Condition="Exists('$(BuildUmbDir)')" />
    <RemoveDir Directories="$(BuildNuGetDir)" Condition="Exists('$(BuildNuGetDir)')" />
    <RemoveDir Directories="$(BuildNuGetCoreDir)" Condition="Exists('$(BuildNuGetCoreDir)')" />

  </Target>

</Project>