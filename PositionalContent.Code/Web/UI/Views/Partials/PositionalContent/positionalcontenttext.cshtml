@using Hifi.PositionalContent
@using Umbraco.Web
@inherits UmbracoViewPage<PositionalContentItemViewModel>

<link href="https://fonts.googleapis.com/css?family=Caveat" rel="stylesheet">

@{
    var item = Model.Content.FirstOrDefault();
    var settings = Model.Settings.FirstOrDefault();
}

<style type="text/css">
    .text-with-copy {
        position: relative;
        width: 100%;
        height: 100%;
        background-color: rgba(255,255,255,0.5);
    }

    .text-with-copy__wrapper {
        //font-family: 'Caveat', cursive;
        height: 100%;
        box-sizing: border-box;
        padding: 10px 20px;
        transform-origin: 50% 50%;
        text-align: justify;
    }

    .text-with-copy__wrapper h1 {
        margin-top: 0;
        margin-bottom: 30px;
        font-size: 30px;
        line-height: 40px;
        font-weight: bold;
    }

    .text-with-copy__wrapper p {
        margin-bottom: 0;
        font-size: 20px;
        line-height: 30px;
    }

    .text-with-copy__preview {
        display: block;
        font-size: 22px;
        color: white;
        font-weight: 900;
        text-shadow: 0px 0px 3px #000;
    }

</style>

@if (settings != null)
{
    <div class="text-with-copy">
        <div class="text-with-copy__wrapper" style="transform: rotate(@settings.GetPropertyValue("rotation")deg); color: @settings.GetPropertyValue("colour")">
            <h1>
                @item.GetPropertyValue("title")
                @if (Model.IsPreview)
                {
                    <span class="text-with-copy__preview">in preview: @Model.PreviewBreakpoint</span>
                }
            </h1>
            @Model.ModifierClass
            @item.GetPropertyValue("bodyText")

        </div>
    </div>
}
else
{
    <div class="text-with-copy">
        <div class="text-with-copy__wrapper">
            <h1>
                @item.GetPropertyValue("title")
                @if (Model.IsPreview)
                {
                <span class="text-with-copy__preview">in preview: @Model.PreviewBreakpoint</span>
                }
            </h1>
            @Model.ModifierClass
            @item.GetPropertyValue("bodyText")

        </div>
    </div>
}

